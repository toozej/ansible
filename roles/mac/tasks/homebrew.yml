---
- name: Determine Homebrew ownership variables
  set_fact:
    homebrew_user: '{{ homebrew_user | default(ansible_user_id) }}'
    homebrew_group: '{{ homebrew_group | default(ansible_user_gid) }}'

# Homebrew setup
- name: install homebrew
  raw: yes '' | /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"


- block:
  # Tap.
  - name: Ensure configured taps are tapped.
    homebrew_tap:
      tap: '{{ item.name | default(item) }}'
      url: '{{ item.url | default(omit) }}'
      state: present
    loop: "{{ homebrew_taps }}"
    become_user: james

  # Cask.
  - name: Ensure blacklisted cask applications are not installed.
    homebrew_cask: "name={{ item }} state=absent"
    loop: "{{ homebrew_cask_uninstalled_apps }}"
    become_user: james

  - name: Install configured cask applications.
    homebrew_cask:
      name: "{{ item.name | default(item) }}"
      state: present
      install_options: "{{ item.install_options | default('appdir=' + homebrew_cask_appdir) }}"
      accept_external_apps: "{{ homebrew_cask_accept_external_apps }}"
    loop: "{{ homebrew_cask_apps }}"
    become_user: james

  # Brew.
  - name: Ensure configured homebrew packages are installed.
    homebrew:
      name: "{{ item.name | default(item) }}"
      install_options: "{{ item.install_options | default(omit) }}"
      state: present
    loop: "{{ homebrew_installed_packages }}"
    become_user: james

  - name: Upgrade all homebrew packages (if configured).
    homebrew: update_homebrew=yes upgrade_all=yes
    when: homebrew_upgrade_all_packages
    become_user: james
