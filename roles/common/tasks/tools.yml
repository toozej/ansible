---
# Load a variable file based on the OS type, or a default if not found.
- include_vars: "{{ item }}"
  with_first_found:
    - files:
      - "../vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version | int}}.yml"
      - "../vars/{{ ansible_distribution }}.yml"
      - "../vars/{{ ansible_os_family }}-{{ ansible_distribution_major_version | int }}.yml"
      - "../vars/{{ ansible_os_family }}.yml"
      - "../vars/default.yml"
      skip: true
  when: (ag_package_name is not defined) or (pip3_package_name is not defined) or (p7zip_package_name is not defined) or (dig_package_name is not defined)

- name: install the latest versions of system monitoring utilities
  package:
    name:
      - htop
      - iotop
      - powertop
      - ncdu
      - lshw
      - net-tools
      - nmap
      - "{{ dig_package_name }}"
      - entr
    state: latest

- name: install packages except on CentOS
  package:
    name:
      - bwm-ng
      - "{{ ag_package_name }}"
      - unrar
    state: latest
  when: ansible_distribution != 'CentOS'

- name: install the latest version of Samba client and tools
  package:
    name:
      - samba-client
      - cifs-utils
    state: latest

- name: install the latest version of pip3
  package:
    name: "{{ pip3_package_name }}"
    state: latest

- name: install the latest versions of download tools
  package:
    name:
      - wget
      - curl
    state: latest

- name: install the latest version of archiving tools
  package:
    name:
      - zip
      - "{{ p7zip_package_name }}"
      - pigz
    state: latest

- name: install the latest version of tree
  package:
    name: tree
    state: latest

- name: install the latest version of strace
  package:
    name: strace
    state: latest

- name: install the latest version of jq
  package:
    name: jq
    state: latest

- name: install the latest version of cal binary
  package:
    name: ncal
    state: latest
  when: ansible_os_family == 'Debian'
