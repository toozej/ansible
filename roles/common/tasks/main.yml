---
# Load a variable file based on the OS type, or a default if not found.
- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version | int}}.yml"
    - "../vars/{{ ansible_distribution }}.yml"
    - "../vars/{{ ansible_os_family }}.yml"
    - "../vars/default.yml"
  when: (ssh_client_package is not defined) or (ag_package_name is not defined) or (pip2_package_name is not defined) or (gnupg_package_name is not defined) or (ripgrep_release is not defined)

- name: Install EPEL repo on RedHat-based systems
  yum:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm
    state: present
  when: ansible_os_family == 'RedHat'

- name: Import EPEL GPG key on RedHat-based systems
  rpm_key:
    key: /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
    state: present
  when: ansible_os_family == 'RedHat'

- name: install the latest version of libselinux-python package on RedHat-based systems
  package:
    name: libselinux-python
    state: latest
  when: ansible_os_family == 'RedHat'

- name: install the latest version of VIM
  package:
    name: vim
    state: latest

- name: install the latest versions of system monitoring utilities
  package:
    name: "{{item}}"
    state: latest
  with_items:
    - htop
    - iotop
    - powertop
    - bwm-ng
    - ncdu
    - lshw

- name: install the latest version of smb client
  package:
    name: samba-client
    state: latest

- name: install the latest version of sshd
  package:
    name: openssh-server
    state: latest

- name: install the latest version of ssh client
  package:
    name: "{{ ssh_client_package_name }}"
    state: latest

- name: secure ssh config
  blockinfile:
    path: /etc/ssh/ssh_config
    insertafter: EOF
    state: present
    content: |
           HostKeyAlgorithms ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,ssh-rsa
           Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-cbc,aes192-cbc,rijndael-cbc@lysator.liu.se
           MACs umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512
    backup: yes

- name: secure sshd config
  blockinfile:
    path: /etc/ssh/sshd_config
    insertafter: EOF
    state: present
    content: |
      KexAlgorithms diffie-hellman-group-exchange-sha256,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,curve25519-sha256@libssh.org
      # HostKeyAlgorithms ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,ssh-rsa
      Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-cbc,aes192-cbc,rijndael-cbc@lysator.liu.se
      MACs umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512
    backup: yes

- name: install the latest version of gnupg (GPG)
  package:
    name: "{{ gnupg_package_name }}"
    state: latest

- name: install the latest version of gnupg-agent (gpg-agent)
  package:
    name: gnupg-agent
    state: latest
  when: ansible_os_family == 'Debian'

- name: create ~/.gnupg directory
  file: path=/home/james/.gnupg state=directory

- name: Setup config file for gnupg-agent
  template:
    src: gpg-agent.conf.j2
    dest: /home/james/.gnupg/gpg-agent.conf
    owner: james
    group: james
    mode: 0664

- name: install the latest version of pip2
  package:
    name: "{{ pip2_package_name }}"
    state: latest

- name: install urllib3[secure]
  pip:
    name: urllib3[secure]
    state: latest

- name: install the latest versions of download tools
  package:
    name: "{{item}}"
    state: latest
  with_items:
    - wget
    - curl

- name: install the latest version of tmux
  package:
    name: tmux
    state: latest

- name: install the latest version of archiving tools
  package:
    name: "{{item}}"
    state: latest
  with_items:
    - zip
    - unrar
    - p7zip

- name: install the latest version of tree
  package:
    name: tree
    state: latest

- name: install the latest version of ag
  package:
    name: "{{ ag_package_name }}"
    state: latest

- name: Install latest version of ripgrep on Debian-based
  include: ripgrep-debian.yml
  when: ansible_os_family == 'Debian'

- name: Install latest version of ripgrep using YUM
  include: ripgrep-yum.yml
  when: ansible_pkg_mgr == 'yum'

- name: Install latest version of ripgrep using DNF
  package:
    name: ripgrep
    state: latest
  when: ansible_pkg_mgr == 'dnf'

- name: Install latest version of Neofetch on Debian
  include: neofetch-debian.yml
  when: ansible_distribution == 'Debian'

- name: Install latest version of Neofetch on Ubuntu
  include: neofetch-ubuntu.yml
  when: ansible_distribution == 'Ubuntu'

- name: Install latest version of Neofetch using YUM
  include: neofetch-yum.yml
  when: ansible_pkg_mgr == 'yum'

- name: Install latest version of Neofetch using DNF
  include: neofetch-dnf.yml
  when: ansible_pkg_mgr == 'dnf'
