---
# Load a variable file based on the OS type, or a default if not found.
- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version | int}}.yml"
    - "../vars/{{ ansible_distribution }}.yml"
    - "../vars/{{ ansible_os_family }}.yml"
    - "../vars/default.yml"
  when: (mariadb_signing_key is not defined) or (mariadb_version is not defined)

- name: "apt | ensure MariaDB signing key present"
  apt_key:
    id: "{{ mariadb_signing_key }}"
    url: "http://keyserver.ubuntu.com"
    state: present

- name: "apt | ensure MariaDB repo present"
  copy:
    content: "deb [arch=amd64] http://ftp.osuosl.org/pub/mariadb/repo/{{ mariadb_version }}/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} main"
    dest: "/etc/apt/sources.list.d/mariadb.list"

- name: "apt | ensure MariaDB client and server installed"
  apt:
    name: "{{item}}"
    update_cache: yes
    state: latest
  with_items:
    - mariadb-server
    - mariadb-client

- name: Determine required MySQL Python libraries.
  set_fact:
    deb_mysql_python_package: "{% if 'python3' in ansible_python_interpreter|default('') %}python3-mysqldb{% else %}python-mysqldb{% endif %}"

- name: Ensure MySQL Python libraries are installed.
  apt: "name={{ deb_mysql_python_package }} state=present"
