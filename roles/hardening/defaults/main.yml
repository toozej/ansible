---
firewall_allowed_services:
  - ssh
  - ntp
  - mdns
  - samba-client
  - dhcpv6-client

# ports must NOT include protocol, should just be list of port numbers
firewall_allowed_tcp_ports: []
firewall_allowed_udp_ports: []
firewall_forwarded_tcp_ports: []
firewall_forwarded_udp_ports: []

# Set to true to ensure other firewall management software is disabled.
firewall_disable_firewalld: false
firewall_disable_ufw: false

# defaults for fail2ban
fail2ban_loglevel: "{{ 'INFO' if (ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('16.04', '>=') or ansible_distribution == 'Debian' and (ansible_distribution_version is version('9', '>=')) or (ansible_os_family == 'RedHat')) else 3 }}"
fail2ban_logtarget: /var/log/fail2ban/fail2ban.log
fail2ban_syslog_target: /var/log/fail2ban/fail2ban.log
fail2ban_syslog_facility: 1
fail2ban_geosshdeny_jail_logtarget: /var/log/fail2ban/fail2ban_geosshdeny.log
fail2ban_socket: /var/run/fail2ban/fail2ban.sock
fail2ban_pidfile: /var/run/fail2ban/fail2ban.pid
fail2ban_dbpurgeage: 86400

fail2ban_sendername: 'Fail2ban'

fail2ban_ignoreips:
 - 127.0.0.1/8
fail2ban_bantime: 600
fail2ban_maxretry: 3
fail2ban_findtime: 600
fail2ban_backend: auto
fail2ban_destemail: root@localhost
fail2ban_banaction: iptables-multiport
fail2ban_mta: sendmail
fail2ban_protocol: tcp
fail2ban_chain: INPUT
fail2ban_action: '%(action_)s'

fail2ban_services:
  - name: "{{ 'sshd' if (ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('16.04', '>=') or (ansible_distribution == 'Debian' and ansible_distribution_version is version('9', '>=')) or (ansible_os_family == 'RedHat')) else 'ssh' }}"
