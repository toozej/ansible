---
# Load a variable file based on the OS type, or a default if not found.
- include_vars: "{{ item }}"
  with_first_found:
    - files:
      - "../vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version | int}}.yml"
      - "../vars/{{ ansible_distribution }}.yml"
      - "../vars/{{ ansible_os_family }}.yml"
      - "../vars/default.yml"
      skip: True
  when: (home_dir_path is not defined)

- name: create "james" user
  user:
    name: james
    comment: "James"
    shell: /bin/bash
    state: present
  when: ansible_os_family != 'Darwin'

- name: allow "james" as sudoer
  lineinfile:
    path: /etc/sudoers
    regexp: '^james'
    insertafter: "^root	ALL=(ALL:ALL) ALL"
    line: 'james	ALL=(ALL:ALL) ALL'

- name: Set authorized key
  authorized_key:
    user: james
    state: present
    key: https://github.com/toozej.keys
    validate_certs: True
  when: ansible_os_family != 'Darwin'

- name: confirm dotfiles repo exists
  stat:
    path: "{{ home_dir_path }}/dotfiles"
  register: dotfiles_repo

- name: clone dotfiles from github
  git:
    repo: 'https://github.com/toozej/dotfiles.git'
    accept_hostkey: yes
    dest: "{{ home_dir_path }}/dotfiles"
    recursive: yes
  register: clone_or_pull
  when: (not ansible_check_mode) and (not dotfiles_repo.stat.exists)

- name: set correct permissions on dotfiles
  file:
    path: "{{ home_dir_path }}/dotfiles"
    recurse: yes
    owner: james
    group: "{{ james_group }}"
  when: (clone_or_pull.changed == True) and (not ansible_check_mode)

- name: set git config URL on dotfiles
  lineinfile:
    path: "{{ home_dir_path }}/dotfiles/.git/config"
    regexp: '^\t url = https://github.com/toozej/dotfiles.git'
    insertafter: '^[remote "origin"]'
    line: '\t url = git@github.com:toozej/dotfiles.git'
  when: (clone_or_pull.changed == True) and (not ansible_check_mode)

# TODO: fix this for Travis runs, works great with KCLI
- name: setup dotfiles
  raw: "sudo -u james {{ home_dir_path|quote }}/dotfiles/setup.sh"
  when: (clone_or_pull.changed == True) and (not ansible_check_mode)
  tags: ci

- name: set git config URL on vimfiles
  lineinfile:
    path: "{{ home_dir_path }}/.vim/.git/config"
    regexp: '^\t url = https://github.com/toozej/vimfiles.git'
    insertafter: '^[remote "origin"]'
    line: '\t url = git@github.com:toozej/vimfiles.git'
  when: (clone_or_pull.changed == True) and (not ansible_check_mode)
  tags: ci
